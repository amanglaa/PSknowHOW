pipeline {
   agent any
   parameters {
                gitParameter defaultValue: 'origin/master', name: 'SBRANCH', type: 'PT_BRANCH_TAG',quickFilterEnabled:true ,description: 'Select Branch'
		booleanParam(name: 'CHECKOUT', defaultValue: 'false', description: 'CHECKOUT')
				 
			}
				 
     stages {
      stage('Checkout') {
             steps {
                checkout scm: [$class: 'GitSCM', userRemoteConfigs: [[url: 'https://github.com/PublicisSapient/KnowHow.git',credentialsId: 'githubcred']], branches: [[name: '${SBRANCH}']]], poll: false

             }
        }
      stage('Select Environment') {
         
         steps {
              script {

                if( params.API_DEPLOYMENT == true) {
                    env.selected_environment = params.SERVER_IP
                } else {

                    def SERVER_LIST=[]
                    def buildStages = env.getEnvironment()
                    for (builds in buildStages) {
                        if(builds.key.startsWith("SERVER_")) {
                          SERVER_LIST.add(builds.value)
                        }
                    }
                    env.selected_environment = input  message: 'Select environment ',ok : 'Proceed',id :'tag_id',
                                                parameters:[choice(choices: SERVER_LIST, description: 'Select environment', name: 'env')]
                    env.credId= "SSH_"+env.selected_environment
                }

                echo "Deploying ${env.selected_environment}."
              }
         }
      }
      stage('Clening') {
            when{
            expression { env.CHECKOUT == 'true' }
        }
          steps {
                withCredentials([
                usernamePassword(credentialsId: env.credId, passwordVariable: 'SSH_PASSWORD', usernameVariable: 'SSH_USERNAME'),
                ]) {
                        sh """
                            > /tmp/customapi_hosts
                            echo "[server]" > /tmp/customapi_hosts
                            echo " ${env.selected_environment}" >> /tmp/customapi_hosts
                            cd ansible_deployment/
                            ansible-playbook -i /tmp/customapi_hosts playbooks/Server-Clean.yaml -e 'selected_server=${env.selected_environment}' -e 'ansible_ssh_pass=${SSH_PASSWORD}' -e 'ansible_ssh_user=${SSH_USERNAME}'
                        """
          
                   }
                }
      }
    }

 }
