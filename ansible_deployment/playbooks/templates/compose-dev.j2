version: "2"
services:
  MongoDB:
    image: {{ MONGODB_REPO }}/{{ MONGODB_IMAGE }}:{{ MONGO_PACKET_VERSION }}
    tty: true
    container_name: mongodb
    ports:
      - 27017:27017
    restart: on-failure
    volumes:
      - {{ INSTALL_DIR }}/{{ PROJECT_NAME }}/db_data:/data/db
      - {{ INSTALL_DIR }}/{{ PROJECT_NAME }}/logs/mongodb:/data/logs
    environment:
      - MONGODB_ADMIN_USER={{ MONGODB_ADMIN_USER }}
      - MONGODB_ADMIN_PASS={{ MONGODB_ADMIN_PASS }}
      - MONGODB_APPLICATION_DATABASE={{ MONGODB_APPLICATION_DATABASE }}
      - MONGODB_APPLICATION_USER={{ MONGODB_APPLICATION_USER }}
      - MONGODB_APPLICATION_PASS={{ MONGODB_APPLICATION_PASS }}
      - ROLE={{ INSTANCE_ROLE }}
      - server_ip={{selected_server}}
    networks:
      - Network_{{ PROJECT_NAME }}

  CustomAPI:
    image: {{ CUSTOMAPI_IMAGE }}:{{ PACKET_VERSION }}
    depends_on:
      - MongoDB
    restart: on-failure
    tty: true
    container_name: customapi
    mem_limit: {{ CUSTOMAPI_MEMORY_LIMIT }}
    mem_reservation: {{ CUSTOMAPI_MEMORY_RESERVATION }}
    ports:
      - 8080:8080
    volumes:
      - {{ INSTALL_DIR }}/{{ PROJECT_NAME }}/logs/customapi:/app/logs
      - {{ INSTALL_DIR }}/{{ PROJECT_NAME }}/properties/:/app/properties/
      - {{ INSTALL_DIR }}/{{ PROJECT_NAME }}/offline_data:/app/offline_data/
      - {{ INSTALL_DIR }}/{{ PROJECT_NAME }}/certs:/app/certs/
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - CONFIG_LOCATION=file:/app/properties/customapi.properties
      - forgotPassword.uiHost={{ DNS_NAME | default(selected_server, True) }}
      - corsFilterValidOrigin={{ selected_server }},localhost,{{ DNS_NAME }}
      - speedyCurrentVersionFile={{ version }}
      - versionnumber={{ PACKET_VERSION }}
      - dbname={{ MONGODB_APPLICATION_DATABASE }}
      - dbusername={{ MONGODB_APPLICATION_USER }}
      - dbpassword={{ MONGODB_APPLICATION_PASS }}
      - JAVA_OPTS={{ JAVA_OPTS }}
    links:
      - MongoDB:mongodb
    networks:
      - Network_{{ PROJECT_NAME }}

  UI:
    image: {{ UI_2_IMAGE }}:{{ UI_PACKET_VERSION }}
    depends_on:
      - CustomAPI
    restart: on-failure
    tty: true
    container_name: ui
    mem_limit: {{ UI_2_MEMORY_LIMIT }}
    mem_reservation: {{ UI_2_MEMORY_RESERVATION }}
    ports:
      - 80:80
      - 443:443
    volumes:
      - {{ INSTALL_DIR }}/{{ PROJECT_NAME }}/logs/ui:/var/log/nginx
      - {{ INSTALL_DIR }}/{{ PROJECT_NAME }}/certs/:/etc/ssl/certs/
    links:
      - CustomAPI:customapi
    environment:
      - API_HOST=customapi
      - API_PORT=8080
      - DNS_SSL={{ DNS_NAME | default(selected_server, True) }}
    networks:
      - Network_{{ PROJECT_NAME }}

  Jira_Processor:
    image: {{ JIRA_IMAGE }}:{{ PACKET_VERSION }}
    depends_on:
      - MongoDB
    restart: on-failure
    tty: true
    container_name: jira-processor
    mem_limit: {{ JIRA_MEMORY_LIMIT }}
    mem_reservation: {{ JIRA_MEMORY_RESERVATION }}
    ports:
      - 50008:50008
    volumes:
      - {{ INSTALL_DIR }}/{{ PROJECT_NAME }}/logs/jira_processor:/app/logs
      - {{ INSTALL_DIR }}/{{ PROJECT_NAME }}/properties/:/app/properties/
      - {{ INSTALL_DIR }}/{{ PROJECT_NAME }}/offline_data:/app/offline_data
      - /etc/hosts:/etc/hosts
    environment:
      - JAVA_OPTS={{ JAVA_OPTS }}
    links:
      - MongoDB:mongodb
    networks:
      - Network_{{ PROJECT_NAME }}

  nonJira_Processor:
    image: {{ NON_JIRA_PROCESSORS_IMAGE }}:{{ PACKET_VERSION }}
    depends_on:
      - MongoDB
    restart: on-failure
    tty: true
    container_name: nonjira-processor
    mem_limit: {{ NON_JIRA_PROCESSORS_MEMORY_LIMIT }}
    mem_reservation: {{ NON_JIRA_PROCESSORS_MEMORY_RESERVATION }}
    volumes:
      - {{ INSTALL_DIR }}/{{ PROJECT_NAME }}/logs/nonjira_processor:/app/logs
      - {{ INSTALL_DIR }}/{{ PROJECT_NAME }}/properties/:/app/properties/
      - {{ INSTALL_DIR }}/{{ PROJECT_NAME }}/offline_data:/app/offline_data
      - {{ INSTALL_DIR }}/{{ PROJECT_NAME }}/certs:/app/certs/
      - /etc/hosts:/etc/hosts
      - /var/run/docker.sock:/var/run/docker.sock
    links:
      - MongoDB:mongodb
    environment:
      - producer.instanceName={{ selected_server }}
      - JAVA_OPTS={{ JAVA_OPTS }}
    networks:
      - Network_{{ PROJECT_NAME }}

  Azure_Processor:
    image: {{ AZURE_IMAGE }}:{{ PACKET_VERSION }}
    restart: on-failure
    depends_on:
      - MongoDB
    tty: true
    container_name: azure-processor
    mem_limit: {{ AZURE_MEMORY_LIMIT }}
    mem_reservation: {{ AZURE_MEMORY_RESERVATION }}
    volumes:
      - {{ INSTALL_DIR }}/{{ PROJECT_NAME }}/logs/azure_processor:/app/logs
      - {{ INSTALL_DIR }}/{{ PROJECT_NAME }}/properties/:/app/properties/
      - {{ INSTALL_DIR }}/{{ PROJECT_NAME }}/offline_data:/app/offline_data
      - /etc/hosts:/etc/hosts
    environment:
      - JAVA_OPTS={{ JAVA_OPTS }}
    links:
      - MongoDB:mongodb
    networks:
      - Network_{{ PROJECT_NAME }}

  nonAzureBoards_Processor:
    image: {{ NON_AZUREBOARDS_PROCESSORS_IMAGE }}:{{ PACKET_VERSION }}
    restart: on-failure
    depends_on:
      - MongoDB
    tty: true
    container_name: nonazureboards-processor
    mem_limit: {{ NON_AZUREBOARDS_PROCESSORS_MEMORY_LIMIT }}
    mem_reservation: {{ NON_AZUREBOARDS_PROCESSORS_MEMORY_RESERVATION }}
    volumes:
      - {{ INSTALL_DIR }}/{{ PROJECT_NAME }}/logs/nonazureboards_processor:/app/logs
      - {{ INSTALL_DIR }}/{{ PROJECT_NAME }}/properties/:/app/properties/
      - {{ INSTALL_DIR }}/{{ PROJECT_NAME }}/offline_data:/app/offline_data
      - {{ INSTALL_DIR }}/{{ PROJECT_NAME }}/certs:/app/certs/
      - /etc/hosts:/etc/hosts
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - JAVA_OPTS={{ JAVA_OPTS }}
    links:
      - MongoDB:mongodb
    networks:
      - Network_{{ PROJECT_NAME }}

  notification-consumer:
    image: {{ NOTIFICATION_CONSUMER_IMAGE }}:{{ PACKET_VERSION }}
    restart: on-failure
    depends_on:
      - MongoDB
    tty: true
    container_name: notification-consumer
    volumes:
      - /app/apps/properties/:/app/properties/
    mem_limit: {{ NOTIFICATION_CONSUMER_MEMORY_LIMIT }}
    mem_reservation: {{ NOTIFICATION_CONSUMER_MEMORY_RESERVATION }}
    ports:
      - 50020:50020
    links:
      - MongoDB:mongodb
    networks:
      - Network_{{ PROJECT_NAME }}
  kafka:
    image: {{ KAFKA_IMAGE }}:{{ PACKET_VERSION }}
    restart: on-failure
    depends_on:
      - zookeeper
    tty: true
    container_name: kafka
    mem_limit: {{ NOTIFICATION_CONSUMER_MEMORY_LIMIT }}
    mem_reservation: {{ NOTIFICATION_CONSUMER_MEMORY_RESERVATION }}
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181 
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9092:9092
    links:
      - MongoDB:mongodb
    networks:
      - Network_{{ PROJECT_NAME }}
  zookeeper:
    image: {{ ZOOKEEPER_IMAGE }}:{{ PACKET_VERSION }}
    container_name: zookeeper
    mem_limit: {{ NOTIFICATION_CONSUMER_MEMORY_LIMIT }}
    mem_reservation: {{ NOTIFICATION_CONSUMER_MEMORY_RESERVATION }}
    restart: always
    ports:
      - "2181:2181"
    networks:
      - Network_{{ PROJECT_NAME }}

networks:
  Network_{{ PROJECT_NAME }}:
