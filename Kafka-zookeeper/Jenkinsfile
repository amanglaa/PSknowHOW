pipeline {
   agent any
   options {
        ansiColor('xterm')
    }
    environment {
       awss3credentialsid = "AWS_S3_CREDENTIALS"
       select_docker_registry = "${env.DEFAULT_REGISTRY}"
       registryCredId = "DOCKER_REGISTRY_CREDENTIALS"
       }
   parameters {
                 gitParameter defaultValue: 'origin/master', name: 'SBRANCH', type: 'PT_BRANCH_TAG',quickFilterEnabled:true ,description: 'Select Branch'
	               booleanParam(name: 'BUILD_IMAGE', defaultValue: 'false', description: 'BUILD_IMAGE')
                 booleanParam(name: 'PUSH_REGISTRY', defaultValue: 'false', description: 'PUSH_REGISTRY')
                 
   }
   stages {
        stage('Checkout') {
             steps {
                checkout scm: [$class: 'GitSCM', userRemoteConfigs: [[url: 'https://github.com/PublicisSapient/KnowHow.git',credentialsId: 'githubcred']], branches: [[name: '${SBRANCH}']]], poll: false

             }
        }
        stage('Capture Version') {
             steps {
                  script {
                               def pom = readMavenPom file: 'pom.xml'
                               env.version = pom.version
                               echo "${pom.version}"
                               echo "${env.version}"
                  }
             }
        }
	stage('Build Kafka and zookeeper Image') {
             when {
                   expression { env.BUILD_IMAGE == 'true' }
             }
             steps {
                sh """
		docker pull zookeeper:3.8.0
    docker pull bitnami/kafka:3.2.1
                """
            }
        }
        stage('Push Registry') {
              when {
                 expression { env.PUSH_REGISTRY == 'true' }
              }
              steps {
                  withCredentials([usernamePassword(credentialsId: env.registryCredId, passwordVariable: 'REGISTRY_PASSWORD', usernameVariable: 'REGISTRY_USERNAME')]) {
                                                   sh """
                                                         docker login -u ${REGISTRY_USERNAME} -p ${REGISTRY_PASSWORD} ${env.select_docker_registry}
                                                         docker tag zookeeper:3.8.0 ${env.select_docker_registry}/speedy/zookeeper:${env.version}
                                                         docker push ${env.select_docker_registry}/speedy/zookeeper:${env.version}
                                                         docker tag bitnami/kafka:3.2.1 ${env.select_docker_registry}/speedy/kafka:${env.version}
                                                         docker push ${env.select_docker_registry}/speedy/kafka:${env.version}
                                                         docker logout ${env.select_docker_registry}
                                                   """
                }
              }
        }
	}
}
