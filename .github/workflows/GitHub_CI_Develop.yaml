name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  # push:
  #   branches: [ develop ]
  pull_request:
    types:
      - labeled
      - unlabeled
      - synchronize
      - opened
      - edited
      - ready_for_review
      - reopened
      - unlocked
    branches: [ develop ]
  pull_request_review:
    types: [edited, dismissed]
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  GitHub_CI:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Sleep for 5 min 
        if: github.event_name == 'push'
        uses: jakejarvis/wait-action@master
        with:
          time: '5s'
      - uses: actions/checkout@v2
        #  - name: Get changed files using defaults
        #id: changed_files
        #uses: tj-actions/changed-files@v3.3
      
        #- name: Get changed files using a comma separator
        #id: changed_files_comma
        #uses: tj-actions/changed-files@v3.3
        #with:
        #  separator: ","
       
        #- name: List all added files
        #run: |
        #  for file in "${{ steps.changed_files.outputs.added_files }}"; do
        #   echo "$file was added"
        # done
          
        #- name: Run step when a file changes in a PR relative to the default branch
        #if: contains(steps.changed_files.outputs.modified_all, 'UI')
        #run: |
        #   echo "Your file UI has been modified."

        #- name: Run step when a file is deleted in a PR relative to the default branch
        #if: contains(steps.changed_files.outputs.deleted_files, 'test.txt')
        #run: |
        #   echo "Your test.txt has been deleted."
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            UI:
              - 'UI/src/**'
      - name: Building UI
        # run only if some file in 'src' folder was changed
        if: steps.changes.outputs.UI == 'true'
        id: BuildUI
        run: |
          cd UI
          sudo chmod -R 777 /usr/local/lib/node_modules
          sudo npm install
          sudo npm install -g @angular/cli@6.0.8
          #npm install --save-dev @angular-devkit/build-angular
          sudo ng build --configuration=docker
          sudo mkdir -p build
          sudo cp -r dist/dashboard/* build/
          sudo chmod -R 775 build
          cd build
          ls -lrt
          sudo tar -czvf ui2.tar *
          sudo mv ui2.tar ../files
          sudo rm -rf build
      # - name: Testing UI
      #   if: steps.changes.outputs.UI == 'true'
      #   id: TestUI
      #   run: |
      #     cd UI
      #     sudo npm install --save-dev @angular-devkit/build-angular
      #     sudo ng test --code-coverage
      #     sudo sed -i 's|SF:/var/jenkins_home/jobs/UI_Build/workspace/UI/|SF:|g' coverage/lcov.info 
      # - name: Scanning UI with Sonar Qube
      #   if: steps.changes.outputs.UI == 'true'
      #   id: SonarUI
      #   run: | 
      #     cd UI
      #     sudo npm install -D sonarqube-scanner
      #     sudo npm run sonar
      #     cd ..
      #     chmod +x SonarDelay.sh
      #     ./SonarDelay.sh ./UI/.scannerwork/report-task.txt

      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt' # See 'Supported distributions' for available options
          java-version: '8'
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
         path: ~/.m2/repository
         key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
         restore-keys: |
           ${{ runner.os }}-maven-      
      - uses: dorny/paths-filter@v2
        id: customapi
        with:
          filters: |
            customapi:
              - 'customapi/src/**'
      - uses: dorny/paths-filter@v2
        id: processors
        with:
          filters: |
            processors:
              - 'processors/**'
      - name: Building and Testing CustomApi processor
        if: steps.customapi.outputs.customapi == 'true'
        id: testcustomapi
        run: |
               mvn clean install -Pcustomapi
      
      - name: Building and Testing jira processor
        if: steps.processors.outputs.processors == 'true'
        id: testjira
        run: |
               mvn clean install -PjiraProcessor
      - name: Building and Testing Azure processor
        id: testazure
        if: steps.processors.outputs.processors == 'true'
        run: |
               mvn clean install -PazureProcessor 
      - name: Building and Testing nonJira processor
        id: testnonjira
        if: steps.processors.outputs.processors == 'true'
        run: |
               mvn clean install -PnonJiraProcessor
      - name: Building and Testing nonAzureProcessor
        id: testnonazure
        if: steps.processors.outputs.processors == 'true'
        run: |
               mvn clean install -PnonAzureBoardsProcessor 
      
      # - name: Checking code Quality using SonarQube for processor
      #   id: Sonarprocessor
      #   if: steps.processors.outputs.processors == 'true'
      #   run: |        
      #          mvn sonar:sonar \
      #             -Dsonar.projectKey=ENGINEERING.KPIDASHBOARD.PROCESSORS \
      #             -Dsonar.projectName=ENGINEERING.KPIDASHBOARD.PROCESSORS \
      #             -Dsonar.host.url=https://URL-of-Sonar.com/sonar \
      #             -Dsonar.login=<#spectoke> -f processors/pom.xml
      #          chmod +x SonarDelay.sh
      #          ./SonarDelay.sh ./processors/target/sonar/report-task.txt
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
               
      # - name: Checking code Quality using SonarQube for Customapi
      #   if: steps.processors.outputs.processors == 'true' ||  steps.customapi.outputs.customapi == 'true'
      #   id: Sonarcustomapi
      #   run: |
      #          mvn sonar:sonar \
      #             -Dsonar.projectKey=ENGINEERING.KPIDASHBOARD.CUSTOMAPI \
      #             -Dsonar.projectName=ENGINEERING.KPIDASHBOARD.CUSTOMAPI \
      #             -Dsonar.host.url=https://URL.com./sonar \
      #             -Dsonar.login=<#specfifytoke> -f customapi/pom.xml
      #          chmod +x SonarDelay.sh
      #           ./SonarDelay.sh ./customapi/target/sonar/report-task.txt
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   
      - name: Send mail
        if: failure()
        uses: dawidd6/action-send-mail@v2
        with:
    # mail server settings
          server_address: 
          server_port: 
    # user credentials
          username: 
          password: 
    # email subject
          subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
    # email body as text
          body: |
            - ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }} 
            - CI triggered by:                                                            ${{ github.actor }}
            - State of UI build is :                                                    ${{steps.BuildUI.outcome}} 
            - State of unit test of UI is:                                            ${{steps.TestUI.outcome}} 
            - Sonar reports status of UI is:                                      ${{steps.SonarUI.outcome}}
            - Status of unit Test of customapi is :                           ${{steps.testcustomapi.outcome}}
            - Status of unit test of jira_processor is   :                   ${{steps.testjira.outcome}}
            - Status of unit test of azure_processor is :                 ${{steps.testazure.outcome}}
            - Status of unit test of non_jira_processor is :            ${{steps.testnonjira.outcome}}
            - Status of unit test of non_azure_processor is :        ${{steps.testnonazure.outcome}}
            - Status of Sonarqube report of processor is :            ${{steps.Sonarprocessor.outcome}}
            - Status of Sonarqube report of customapi is :           ${{steps.Sonarcustomapi.outcome}}
            - click on the link for further details https://github.com/rapkalya/KnowHow/actions/runs/${{ github.run_id }} 
    # comma-separated string, send email to
          to: 
    # from email name
          from: GitHub                 
     # - name: Run sonar for UI
     #   run: |
      #    cd UI
       #   sudo npm install -D sonarqube-scanner
        #  sudo npm run sonar
      #- name: Check Coverage 
       # run: |
        # cd UI
         #       npm install --save-dev @angular-devkit/build-angular
          #      sudo ng test --code-coverage
           #     sudo sed -i 's|SF:/var/jenkins_home/jobs/UI_Build/workspace/UI/|SF:|g' coverage/lcov.info

      #- name: automerge
       # uses: "pascalgn/automerge-action@v0.12.0"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_LABELS: ""
          MERGE_REMOVE_LABELS: ""
          MERGE_METHOD: ""
          MERGE_COMMIT_MESSAGE: "pull-request-description"
          MERGE_FORKS: "true"
          MERGE_RETRIES: "6"
          MERGE_RETRY_SLEEP: "10000"
          UPDATE_LABELS: ""
          UPDATE_METHOD: "rebase"
